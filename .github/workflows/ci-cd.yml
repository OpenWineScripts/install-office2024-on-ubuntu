name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# --- CORREÇÃO AQUI: Adicione o bloco de permissões no nível do workflow ---
permissions:
  contents: write # Concede permissão de escrita para o token em conteúdos do repositório, o que inclui releases.
  # Você pode adicionar outras permissões se necessário para outros passos, por exemplo:
  # packages: write # Se você estiver publicando pacotes
  # pull-requests: write # Se estiver interagindo com PRs

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Run ShellCheck on shell scripts
        run: |
          find . -name "*.sh" -print0 | while IFS= read -r -d $'\0' file; do
            echo "Running ShellCheck on $file..."
            shellcheck "$file" || true
          done
        shell: bash

      - name: Upload repository as artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-project-scripts
          path: .

  cd:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-project-scripts
          path: ./downloaded_artifacts

      - name: List downloaded artifacts
        run: |
          echo "Listing contents of downloaded_artifacts:"
          ls -R ./downloaded_artifacts/

      - name: Create zip for release asset
        run: |
          cd ./downloaded_artifacts
          zip -r ../release-files.zip ./*

      - name: Create GitHub Release (Simplified CD)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Automated release from CI/CD pipeline.
            Build number: ${{ github.run_number }}
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-files.zip
          asset_name: project-files-v${{ github.run_number }}.zip
          asset_content_type: application/zip

    # Exemplo de Deployment real (necessitaria de mais configuração)
    # - name: Deploy to Staging/Production
    #   run: |
    #     echo "Placeholder for actual deployment logic."
